<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qf.shopping.mapper.OrderMapper" >
  <resultMap id="BaseResultMap" type="com.qf.shopping.pojo.Order" >
    <id column="orderId" property="orderId" jdbcType="INTEGER" />
    <result column="orderNum" property="orderNum" jdbcType="VARCHAR" />
    <result column="state" property="state" jdbcType="VARCHAR" />
    <result column="orderTime" property="orderTime" jdbcType="DATE" />
    <result column="orderTotalMoney" property="orderTotalMoney" jdbcType="REAL" />
    <result column="usreId" property="usreId" jdbcType="INTEGER" />
    <result column="orderSendType" property="orderSendType" jdbcType="VARCHAR" />
    <result column="orderPayType" property="orderPayType" jdbcType="VARCHAR" />
    <result column="orderShAddress" property="orderShAddress" jdbcType="VARCHAR" />
    <result column="orderShPeople" property="orderShPeople" jdbcType="VARCHAR" />
    <result column="oderShTel" property="oderShTel" jdbcType="VARCHAR" />
    <result column="flag" property="flag" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    orderId, orderNum, state, orderTime, orderTotalMoney, usreId, orderSendType, orderPayType, 
    orderShAddress, orderShPeople, oderShTel, flag
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.qf.shopping.pojo.OrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where orderId = #{orderId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where orderId = #{orderId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.qf.shopping.pojo.OrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.qf.shopping.pojo.Order" >
    insert into t_order (orderId, orderNum, state, 
      orderTime, orderTotalMoney, usreId, 
      orderSendType, orderPayType, orderShAddress, 
      orderShPeople, oderShTel, flag
      )
    values (#{orderId,jdbcType=INTEGER}, #{orderNum,jdbcType=VARCHAR}, #{state,jdbcType=VARCHAR}, 
      #{orderTime,jdbcType=DATE}, #{orderTotalMoney,jdbcType=REAL}, #{usreId,jdbcType=INTEGER}, 
      #{orderSendType,jdbcType=VARCHAR}, #{orderPayType,jdbcType=VARCHAR}, #{orderShAddress,jdbcType=VARCHAR}, 
      #{orderShPeople,jdbcType=VARCHAR}, #{oderShTel,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.qf.shopping.pojo.Order" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        orderId,
      </if>
      <if test="orderNum != null" >
        orderNum,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="orderTime != null" >
        orderTime,
      </if>
      <if test="orderTotalMoney != null" >
        orderTotalMoney,
      </if>
      <if test="usreId != null" >
        usreId,
      </if>
      <if test="orderSendType != null" >
        orderSendType,
      </if>
      <if test="orderPayType != null" >
        orderPayType,
      </if>
      <if test="orderShAddress != null" >
        orderShAddress,
      </if>
      <if test="orderShPeople != null" >
        orderShPeople,
      </if>
      <if test="oderShTel != null" >
        oderShTel,
      </if>
      <if test="flag != null" >
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=INTEGER},
      </if>
      <if test="orderNum != null" >
        #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        #{state,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        #{orderTime,jdbcType=DATE},
      </if>
      <if test="orderTotalMoney != null" >
        #{orderTotalMoney,jdbcType=REAL},
      </if>
      <if test="usreId != null" >
        #{usreId,jdbcType=INTEGER},
      </if>
      <if test="orderSendType != null" >
        #{orderSendType,jdbcType=VARCHAR},
      </if>
      <if test="orderPayType != null" >
        #{orderPayType,jdbcType=VARCHAR},
      </if>
      <if test="orderShAddress != null" >
        #{orderShAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderShPeople != null" >
        #{orderShPeople,jdbcType=VARCHAR},
      </if>
      <if test="oderShTel != null" >
        #{oderShTel,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.qf.shopping.pojo.OrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.orderId != null" >
        orderId = #{record.orderId,jdbcType=INTEGER},
      </if>
      <if test="record.orderNum != null" >
        orderNum = #{record.orderNum,jdbcType=VARCHAR},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=VARCHAR},
      </if>
      <if test="record.orderTime != null" >
        orderTime = #{record.orderTime,jdbcType=DATE},
      </if>
      <if test="record.orderTotalMoney != null" >
        orderTotalMoney = #{record.orderTotalMoney,jdbcType=REAL},
      </if>
      <if test="record.usreId != null" >
        usreId = #{record.usreId,jdbcType=INTEGER},
      </if>
      <if test="record.orderSendType != null" >
        orderSendType = #{record.orderSendType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderPayType != null" >
        orderPayType = #{record.orderPayType,jdbcType=VARCHAR},
      </if>
      <if test="record.orderShAddress != null" >
        orderShAddress = #{record.orderShAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.orderShPeople != null" >
        orderShPeople = #{record.orderShPeople,jdbcType=VARCHAR},
      </if>
      <if test="record.oderShTel != null" >
        oderShTel = #{record.oderShTel,jdbcType=VARCHAR},
      </if>
      <if test="record.flag != null" >
        flag = #{record.flag,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set orderId = #{record.orderId,jdbcType=INTEGER},
      orderNum = #{record.orderNum,jdbcType=VARCHAR},
      state = #{record.state,jdbcType=VARCHAR},
      orderTime = #{record.orderTime,jdbcType=DATE},
      orderTotalMoney = #{record.orderTotalMoney,jdbcType=REAL},
      usreId = #{record.usreId,jdbcType=INTEGER},
      orderSendType = #{record.orderSendType,jdbcType=VARCHAR},
      orderPayType = #{record.orderPayType,jdbcType=VARCHAR},
      orderShAddress = #{record.orderShAddress,jdbcType=VARCHAR},
      orderShPeople = #{record.orderShPeople,jdbcType=VARCHAR},
      oderShTel = #{record.oderShTel,jdbcType=VARCHAR},
      flag = #{record.flag,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.qf.shopping.pojo.Order" >
    update t_order
    <set >
      <if test="orderNum != null" >
        orderNum = #{orderNum,jdbcType=VARCHAR},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=VARCHAR},
      </if>
      <if test="orderTime != null" >
        orderTime = #{orderTime,jdbcType=DATE},
      </if>
      <if test="orderTotalMoney != null" >
        orderTotalMoney = #{orderTotalMoney,jdbcType=REAL},
      </if>
      <if test="usreId != null" >
        usreId = #{usreId,jdbcType=INTEGER},
      </if>
      <if test="orderSendType != null" >
        orderSendType = #{orderSendType,jdbcType=VARCHAR},
      </if>
      <if test="orderPayType != null" >
        orderPayType = #{orderPayType,jdbcType=VARCHAR},
      </if>
      <if test="orderShAddress != null" >
        orderShAddress = #{orderShAddress,jdbcType=VARCHAR},
      </if>
      <if test="orderShPeople != null" >
        orderShPeople = #{orderShPeople,jdbcType=VARCHAR},
      </if>
      <if test="oderShTel != null" >
        oderShTel = #{oderShTel,jdbcType=VARCHAR},
      </if>
      <if test="flag != null" >
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.qf.shopping.pojo.Order" >
    update t_order
    set orderNum = #{orderNum,jdbcType=VARCHAR},
      state = #{state,jdbcType=VARCHAR},
      orderTime = #{orderTime,jdbcType=DATE},
      orderTotalMoney = #{orderTotalMoney,jdbcType=REAL},
      usreId = #{usreId,jdbcType=INTEGER},
      orderSendType = #{orderSendType,jdbcType=VARCHAR},
      orderPayType = #{orderPayType,jdbcType=VARCHAR},
      orderShAddress = #{orderShAddress,jdbcType=VARCHAR},
      orderShPeople = #{orderShPeople,jdbcType=VARCHAR},
      oderShTel = #{oderShTel,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where orderId = #{orderId,jdbcType=INTEGER}
  </update>
</mapper>